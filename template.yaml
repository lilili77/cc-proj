AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification template describing your function.
Resources:
  ImgBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicReadWrite

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ImgBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref ImgBucket
                - /*

  # LF0
  LF0Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
        # {
        #     "Version": "2012-10-17",
        #     "Statement": [
        #         {
        #             "Effect": "Allow",
        #             "Principal": {
        #                 "Service": "lambda.amazonaws.com"
        #             },
        #             "Action": "sts:AssumeRole"
        #         }
        #     ]
        # }

      # ManagedPolicyArns:
      #   - arn:aws:iam::aws:policy/AmazonRekognitionFullAccess
      #   - arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess
      Policies:
        - PolicyName: LF0BasicExecutionInlinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/proj-LF0:*

            # {
            #     "Version": "2012-10-17",
            #     "Statement": [
            #         {
            #             "Effect": "Allow",
            #             "Action": [
            #                 "logs:CreateLogStream",
            #                 "logs:PutLogEvents"
            #             ],
            #             "Resource": [
            #                 "arn:aws:logs:us-east-1:037747959865:log-group:/aws/lambda/proj-LF0:*"
            #             ]
            #         }
            #     ]
            # }

  LF0LogGroup:
        Type: AWS::Logs::LogGroup
        Properties:
            LogGroupName: '/aws/lambda/proj-LF0'
            RetentionInDays: 30

  LF0:
    Type: 'AWS::Serverless::Function'
    DependsOn: LF0LogGroup
    Properties:
      FunctionName: 'proj-LF0'
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./LF0
      Description: 'Lambda function that upload photo to s3 and call ML endpoint to return a string'
      MemorySize: 128
      Timeout: 3
      Role: !GetAtt LF0Role.Arn
      Environment:
        Variables:
          ImgBucket: !Ref ImgBucket

  # LF1

  LF1Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      # ManagedPolicyArns:
      #   - arn:aws:iam::aws:policy/AmazonRekognitionFullAccess
      #   - arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess
      Policies:
        - PolicyName: LF1BasicExecutionInlinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/proj-LF1:*

  LF1LogGroup:
        Type: AWS::Logs::LogGroup
        Properties:
            LogGroupName: '/aws/lambda/proj-LF1'
            RetentionInDays: 30

  LF1:
    Type: 'AWS::Serverless::Function'
    DependsOn: LF1LogGroup
    Properties:
      FunctionName: 'proj-LF1'
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./LF1
      Description: ''
      MemorySize: 128
      Timeout: 3
      Role: !GetAtt LF1Role.Arn
